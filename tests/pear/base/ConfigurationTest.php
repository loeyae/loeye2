<?php

namespace loeye\unit\base;

use loeye\base\Configuration;
use loeye\config\app\ConfigDefinition;
use loeye\config\app\DeltaDefinition;
use loeye\unit\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-01-18 at 13:55:22.
 */
class ConfigurationTest extends TestCase {

    /**
     * @var Configuration
     */
    protected $object;


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $baseDir = PROJECT_CONFIG_DIR;
        $cacheDir = RUNTIME_CACHE_DIR;
        $definition = [new ConfigDefinition(), new DeltaDefinition()];
        $this->object = new Configuration('unit', 'app', $definition, null, $baseDir, $cacheDir);
    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }


    /**
     * @cover Configuration::getBaseDir
     * @todo   Implement testGetBaseDir().
     */
    public function testGetBaseDir()
    {
        $expected = PROJECT_UNIT_DIR .DIRECTORY_SEPARATOR. 'conf'.DIRECTORY_SEPARATOR.'unit';
        $actual = $this->object->getBaseDir();
        $this->assertEquals($expected, $actual);
    }


    /**
     * @cover Configuration::getBundle
     * @todo   Implement testGetBundle().
     */
    public function testGetBundle()
    {
        $expected = 'app';
        $actual = $this->object->getBundle();
        $this->assertEquals($expected, $actual);
    }


    /**
     * @cover Configuration::getContext
     * @todo   Implement testGetContext().
     */
    public function testGetContext()
    {
        $expected = null;
        $actual = $this->object->getContext();
        $this->assertEquals($expected, $actual);
    }


    /**
     * @cover Configuration::setDefinition
     * @todo   Implement testSetDefinition().
     */
    public function testSetDefinition()
    {
        $this->assertTrue(true);
    }


    /**
     * @cover Configuration::getDefinition
     * @todo   Implement testGetDefinition().
     */
    public function testGetDefinition()
    {
        $this->assertIsArray($this->object->getDefinition());
    }


    /**
     * @cover Configuration::bundle
     * @todo   Implement testBundle().
     */
    public function testBundle()
    {
        $this->assertTrue(true);
    }


    /**
     * @cover Configuration::context
     * @todo   Implement testContext().
     */
    public function testContext()
    {
        $this->assertTrue(true);
    }


    /**
     * @cover Configuration::get
     * @todo   Implement testGet().
     */
    public function testGet()
    {
        $expected = 'http://localhost';
        $actual = $this->object->get('constants.BASE_SERVER_URL');
        $this->assertEquals($expected, $actual);
    }


    /**
     * @cover Configuration::getConfig
     * @todo   Implement testGetConfig().
     */
    public function testGetConfig()
    {
        $actual = $this->object->getConfig();
        $this->assertIsArray($actual);
    }


    /**
     * @cover Configuration::getSettings
     * @todo   Implement testGetSettings().
     */
    public function testGetSettings()
    {
        $actual = $this->object->getSettings();
        $this->assertIsArray($actual);
    }

}
