<?php

namespace loeye\unit\config;

use loeye\config\app\ConfigDefinition;
use loeye\config\app\DeltaDefinition;
use loeye\config\ConfigurationLoader;
use loeye\unit\TestCase;
use Psr\Cache\InvalidArgumentException;
use Symfony\Component\Cache\Exception\CacheException;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-01-18 at 12:13:20.
 */
class ConfigurationLoaderTest extends TestCase {

    /**
     * @var ConfigurationLoader
     */
    protected $object;


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     * @throws CacheException
     */
    protected function setUp()
    {
        $directory = PROJECT_CONFIG_DIR;
        $namespace = 'unit.app';
        $definition = [new ConfigDefinition(), new DeltaDefinition()];
        $this->object = new ConfigurationLoader($directory, $namespace, $definition);
    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }


    /**
     * @covers \loeye\config\ConfigurationLoader::getDirectory
     */
    public function testGetDirectory()
    {
        $actual = $this->object->getDirectory();
        $expected = PROJECT_UNIT_DIR .DIRECTORY_SEPARATOR .'conf';
        $this->assertEquals($expected, $actual);
    }


    /**
     * @covers \loeye\config\ConfigurationLoader::load
     */
    public function testLoad()
    {
        $actual = $this->object->load();
        $this->assertIsArray($actual);
        $this->assertArrayHasKey('constants', $actual);
        $this->assertArrayHasKey('application', $actual);
    }


    /**
     * @covers \loeye\config\ConfigurationLoader::getCache
     * @throws InvalidArgumentException
     */
    public function testGetCache()
    {
        $actual = $this->object->getCache('master');
        $this->assertIsArray($actual);
        $this->assertArrayHasKey('constants', $actual);
        $this->assertArrayHasKey('application', $actual);
    }

}
