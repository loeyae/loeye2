<?php

namespace loeye\unit\config;

use loeye\config\general\DeltaConfigDefinition;
use loeye\config\general\RulesetConfigDefinition;
use loeye\config\Processor;
use loeye\unit\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-01-18 at 09:13:49.
 */
class ProcessorTest extends TestCase {

    /**
     * @var Processor
     */
    protected $object;


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Processor;
    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }


    /**
     * @covers \loeye\config\Processor::process
     */
    public function testProcess()
    {
        $configuration = new RulesetConfigDefinition();
        $configs = [0 => ['settings' => ['master'], 'setting' => ['a' => 1, 'b' => 2, 'c' => ['d' =>3]]]];
        $actual = $this->object->process($configuration->getConfigTreeBuilder()->buildTree(), $configs);
        $this->assertIsArray($actual);
        $this->assertArrayHasKey('settings', $actual);
        $this->assertArrayHasKey('setting', $actual);
    }


    /**
     * @covers \loeye\config\Processor::processConfiguration
     */
    public function testProcessConfiguration()
    {
        $configuration = new RulesetConfigDefinition();
        $configs = [0 => ['settings' => ['master'], 'setting' => ['a' => 1, 'b' => 2, 'c' => ['d' =>3]]], 1 => ['settings' => ['master'], 'setting' => ['b' => 5, 'c' => ['d' => 4], 'd' => ['c' => 3]]]];
        $actual = $this->object->processConfiguration($configuration, $configs);
        $this->assertIsArray($actual);
        $this->assertArrayHasKey('settings', $actual);
        $this->assertArrayHasKey('setting', $actual);
        $this->assertArrayHasKey('b', $actual['setting']);
        $this->assertEquals(5, $actual['setting']['b']);
        $this->assertEquals(['d' => 4], $actual['setting']['c']);
    }


    /**
     * @covers \loeye\config\Processor::processConfigurations
     */
    public function testProcessConfigurations()
    {
        $rconfiguration = new RulesetConfigDefinition();
        $dconfiguration = new DeltaConfigDefinition();
        $configs = [0 => ['settings' => ['master'], 'setting' => ['a' => 1, 'b' => 2, 'c' => ['d' =>3]]], 1 => ['settings' => ['master'], 'setting' => ['b' => 5, 'c' => ['d' => 4], 'd' => ['c' => 3]]], 2 => ['settings' => [['validate' => 'test']], 'validate' => ['fields' => ['cid' => 1, 'content' => 2]]], 3 => ['settings' => [['validate' => 'sample']], 'validate' => ['fields' => ['cid' => 2, 'content' => 3]]]];
        $actual = $this->object->processConfigurations([$rconfiguration, $dconfiguration], $configs);
        $this->assertIsArray($actual);
        $this->assertArrayHasKey('master', $actual);
        $this->assertArrayHasKey('validate', $actual);
        $this->assertArrayHasKey('setting', $actual['master']);
        $this->assertArrayHasKey('test', $actual['validate']);
        $this->assertArrayHasKey('sample', $actual['validate']);
    }

}
